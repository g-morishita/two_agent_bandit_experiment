{"version":3,"file":"index.browser.min.js","sources":["../src/index.ts"],"sourcesContent":["import { JsPsych, JsPsychPlugin, ParameterType, TrialType } from \"jspsych\";\n\nconst info = <const>{\n  name: \"instructions\",\n  parameters: {\n    /** Each element of the array is the HTML-formatted content for a single page. */\n    pages: {\n      type: ParameterType.HTML_STRING,\n      pretty_name: \"Pages\",\n      default: undefined,\n      array: true,\n    },\n    /** The key the subject can press in order to advance to the next page. */\n    key_forward: {\n      type: ParameterType.KEY,\n      pretty_name: \"Key forward\",\n      default: \"ArrowRight\",\n    },\n    /** The key that the subject can press to return to the previous page. */\n    key_backward: {\n      type: ParameterType.KEY,\n      pretty_name: \"Key backward\",\n      default: \"ArrowLeft\",\n    },\n    /** If true, the subject can return to the previous page of the instructions. */\n    allow_backward: {\n      type: ParameterType.BOOL,\n      pretty_name: \"Allow backward\",\n      default: true,\n    },\n    /** If true, the subject can use keyboard keys to navigate the pages. */\n    allow_keys: {\n      type: ParameterType.BOOL,\n      pretty_name: \"Allow keys\",\n      default: true,\n    },\n    /** If true, then a \"Previous\" and \"Next\" button will be displayed beneath the instructions. */\n    show_clickable_nav: {\n      type: ParameterType.BOOL,\n      pretty_name: \"Show clickable nav\",\n      default: false,\n    },\n    /** If true, and clickable navigation is enabled, then Page x/y will be shown between the nav buttons. */\n    show_page_number: {\n      type: ParameterType.BOOL,\n      pretty_name: \"Show page number\",\n      default: false,\n    },\n    /** The text that appears before x/y (current/total) pages displayed with show_page_number. */\n    page_label: {\n      type: ParameterType.STRING,\n      pretty_name: \"Page label\",\n      default: \"Page\",\n    },\n    /** The text that appears on the button to go backwards. */\n    button_label_previous: {\n      type: ParameterType.STRING,\n      pretty_name: \"Button label previous\",\n      default: \"Previous\",\n    },\n    /** The text that appears on the button to go forwards. */\n    button_label_next: {\n      type: ParameterType.STRING,\n      pretty_name: \"Button label next\",\n      default: \"Next\",\n    },\n  },\n};\n\ntype Info = typeof info;\n\n/**\n * **instructions**\n *\n * jsPsych plugin to display text (including HTML-formatted strings) during the experiment.\n * Use it to show a set of pages that participants can move forward/backward through.\n * Page numbers can be displayed to help with navigation by setting show_page_number to true.\n *\n * @author Josh de Leeuw\n * @see {@link https://www.jspsych.org/plugins/jspsych-instructions/ instructions plugin documentation on jspsych.org}\n */\nclass InstructionsPlugin implements JsPsychPlugin<Info> {\n  static info = info;\n\n  constructor(private jsPsych: JsPsych) {}\n\n  trial(display_element: HTMLElement, trial: TrialType<Info>) {\n    var current_page = 0;\n\n    var view_history = [];\n\n    var start_time = performance.now();\n\n    var last_page_update_time = start_time;\n\n    function btnListener(evt) {\n      evt.target.removeEventListener(\"click\", btnListener);\n      if (this.id === \"jspsych-instructions-back\") {\n        back();\n      } else if (this.id === \"jspsych-instructions-next\") {\n        next();\n      }\n    }\n\n    function show_current_page() {\n      var html = trial.pages[current_page];\n\n      var pagenum_display = \"\";\n      if (trial.show_page_number) {\n        pagenum_display =\n          \"<span style='margin: 0 1em;' class='\" +\n          \"jspsych-instructions-pagenum'>\" +\n          trial.page_label +\n          \" \" +\n          (current_page + 1) +\n          \"/\" +\n          trial.pages.length +\n          \"</span>\";\n      }\n\n      if (trial.show_clickable_nav) {\n        var nav_html = \"<div class='jspsych-instructions-nav' style='padding: 10px 0px;'>\";\n        if (trial.allow_backward) {\n          var allowed = current_page > 0 ? \"\" : \"disabled='disabled'\";\n          nav_html +=\n            \"<button id='jspsych-instructions-back' class='jspsych-btn' style='margin-right: 5px;' \" +\n            allowed +\n            \">&lt; \" +\n            trial.button_label_previous +\n            \"</button>\";\n        }\n        if (trial.pages.length > 1 && trial.show_page_number) {\n          nav_html += pagenum_display;\n        }\n        nav_html +=\n          \"<button id='jspsych-instructions-next' class='jspsych-btn'\" +\n          \"style='margin-left: 5px;'>\" +\n          trial.button_label_next +\n          \" &gt;</button></div>\";\n\n        html += nav_html;\n        display_element.innerHTML = html;\n        if (current_page != 0 && trial.allow_backward) {\n          display_element\n            .querySelector(\"#jspsych-instructions-back\")\n            .addEventListener(\"click\", btnListener);\n        }\n\n        display_element\n          .querySelector(\"#jspsych-instructions-next\")\n          .addEventListener(\"click\", btnListener);\n      } else {\n        if (trial.show_page_number && trial.pages.length > 1) {\n          // page numbers for non-mouse navigation\n          html += \"<div class='jspsych-instructions-pagenum'>\" + pagenum_display + \"</div>\";\n        }\n        display_element.innerHTML = html;\n      }\n    }\n\n    function next() {\n      add_current_page_to_view_history();\n\n      current_page++;\n\n      // if done, finish up...\n      if (current_page >= trial.pages.length) {\n        endTrial();\n      } else {\n        show_current_page();\n      }\n    }\n\n    function back() {\n      add_current_page_to_view_history();\n\n      current_page--;\n\n      show_current_page();\n    }\n\n    function add_current_page_to_view_history() {\n      var current_time = performance.now();\n\n      var page_view_time = Math.round(current_time - last_page_update_time);\n\n      view_history.push({\n        page_index: current_page,\n        viewing_time: page_view_time,\n      });\n\n      last_page_update_time = current_time;\n    }\n\n    const endTrial = () => {\n      if (trial.allow_keys) {\n        this.jsPsych.pluginAPI.cancelKeyboardResponse(keyboard_listener);\n      }\n\n      display_element.innerHTML = \"\";\n\n      var trial_data = {\n        view_history: view_history,\n        rt: Math.round(performance.now() - start_time),\n      };\n\n      this.jsPsych.finishTrial(trial_data);\n    };\n\n    const after_response = (info) => {\n      // have to reinitialize this instead of letting it persist to prevent accidental skips of pages by holding down keys too long\n      keyboard_listener = this.jsPsych.pluginAPI.getKeyboardResponse({\n        callback_function: after_response,\n        valid_responses: [trial.key_forward, trial.key_backward],\n        rt_method: \"performance\",\n        persist: false,\n        allow_held_key: false,\n      });\n      // check if key is forwards or backwards and update page\n      if (this.jsPsych.pluginAPI.compareKeys(info.key, trial.key_backward)) {\n        if (current_page !== 0 && trial.allow_backward) {\n          back();\n        }\n      }\n\n      if (this.jsPsych.pluginAPI.compareKeys(info.key, trial.key_forward)) {\n        next();\n      }\n    };\n\n    show_current_page();\n\n    if (trial.allow_keys) {\n      var keyboard_listener = this.jsPsych.pluginAPI.getKeyboardResponse({\n        callback_function: after_response,\n        valid_responses: [trial.key_forward, trial.key_backward],\n        rt_method: \"performance\",\n        persist: false,\n      });\n    }\n  }\n\n  simulate(\n    trial: TrialType<Info>,\n    simulation_mode,\n    simulation_options: any,\n    load_callback: () => void\n  ) {\n    if (simulation_mode == \"data-only\") {\n      load_callback();\n      this.simulate_data_only(trial, simulation_options);\n    }\n    if (simulation_mode == \"visual\") {\n      this.simulate_visual(trial, simulation_options, load_callback);\n    }\n  }\n\n  private create_simulation_data(trial: TrialType<Info>, simulation_options) {\n    let curr_page = 0;\n    let rt = 0;\n    const view_history = [];\n\n    while (curr_page !== trial.pages.length) {\n      const view_time = this.jsPsych.randomization.sampleExGaussian(3000, 300, 1 / 300);\n      view_history.push({ page_index: curr_page, viewing_time: view_time });\n      rt += view_time;\n      if (curr_page == 0 || !trial.allow_backward) {\n        curr_page++;\n      } else {\n        if (this.jsPsych.randomization.sampleBernoulli(0.9) == 1) {\n          curr_page++;\n        } else {\n          curr_page--;\n        }\n      }\n    }\n\n    const default_data = {\n      view_history: view_history,\n      rt: rt,\n    };\n\n    const data = this.jsPsych.pluginAPI.mergeSimulationData(default_data, simulation_options);\n\n    this.jsPsych.pluginAPI.ensureSimulationDataConsistency(trial, data);\n\n    return data;\n  }\n\n  private simulate_data_only(trial: TrialType<Info>, simulation_options) {\n    const data = this.create_simulation_data(trial, simulation_options);\n\n    this.jsPsych.finishTrial(data);\n  }\n\n  private simulate_visual(trial: TrialType<Info>, simulation_options, load_callback: () => void) {\n    const data = this.create_simulation_data(trial, simulation_options);\n\n    const display_element = this.jsPsych.getDisplayElement();\n\n    this.trial(display_element, trial);\n    load_callback();\n\n    const advance = (rt) => {\n      if (trial.allow_keys) {\n        this.jsPsych.pluginAPI.pressKey(trial.key_forward, rt);\n      } else if (trial.show_clickable_nav) {\n        this.jsPsych.pluginAPI.clickTarget(\n          display_element.querySelector(\"#jspsych-instructions-next\"),\n          rt\n        );\n      }\n    };\n\n    const backup = (rt) => {\n      if (trial.allow_keys) {\n        this.jsPsych.pluginAPI.pressKey(trial.key_backward, rt);\n      } else if (trial.show_clickable_nav) {\n        this.jsPsych.pluginAPI.clickTarget(\n          display_element.querySelector(\"#jspsych-instructions-back\"),\n          rt\n        );\n      }\n    };\n\n    let curr_page = 0;\n    let t = 0;\n    for (let i = 0; i < data.view_history.length; i++) {\n      if (i == data.view_history.length - 1) {\n        advance(t + data.view_history[i].viewing_time);\n      } else {\n        if (data.view_history[i + 1].page_index > curr_page) {\n          advance(t + data.view_history[i].viewing_time);\n        }\n        if (data.view_history[i + 1].page_index < curr_page) {\n          backup(t + data.view_history[i].viewing_time);\n        }\n        t += data.view_history[i].viewing_time;\n        curr_page = data.view_history[i + 1].page_index;\n      }\n    }\n  }\n}\n\nexport default InstructionsPlugin;\n"],"names":["info","name","parameters","pages","type","ParameterType","HTML_STRING","pretty_name","default","undefined","array","key_forward","KEY","key_backward","allow_backward","BOOL","allow_keys","show_clickable_nav","show_page_number","page_label","STRING","button_label_previous","button_label_next","InstructionsPlugin","jsPsych","_classCallCheck","this","display_element","trial","_this","current_page","view_history","start_time","performance","now","last_page_update_time","btnListener","evt","target","removeEventListener","id","back","next","show_current_page","html","pagenum_display","length","nav_html","innerHTML","querySelector","addEventListener","add_current_page_to_view_history","endTrial","current_time","page_view_time","Math","round","push","page_index","viewing_time","pluginAPI","cancelKeyboardResponse","keyboard_listener","trial_data","rt","finishTrial","getKeyboardResponse","callback_function","after_response","valid_responses","rt_method","persist","allow_held_key","compareKeys","key","value","simulation_mode","simulation_options","load_callback","simulate_data_only","simulate_visual","curr_page","view_time","randomization","sampleExGaussian","sampleBernoulli","default_data","data","mergeSimulationData","ensureSimulationDataConsistency","create_simulation_data","_this2","getDisplayElement","advance","pressKey","clickTarget","t","i"],"mappings":"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"}